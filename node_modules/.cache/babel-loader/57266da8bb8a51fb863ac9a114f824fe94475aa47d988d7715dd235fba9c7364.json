{"ast":null,"code":"var _jsxFileName = \"/home/shamal.thakore@firstcry.io/Shamal_thakore/text_changes/src/components/NavBar.js\";\nimport React, { useState } from 'react';\nimport propsTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NavBar(props) {\n  // const [text, updatetext] = useState(props.title+ `-` +props.age);\n\n  // const textUpperCase = () => {\n  //     let textUppercase = text.toUpperCase();\n  //     updatetext(textUppercase)\n  // }\n\n  // const setTestvalue = (event) => {\n  //     updatetext(event.target.value)\n  // }\n\n  // const textLowerCase = () => {\n  //     let textlowercase = text.toLowerCase();\n  //     updatetext(textlowercase)\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n_c = NavBar;\nNavBar.propsType = {\n  title: propsTypes.string,\n  age: propsTypes.number\n};\n\n// NavBar.defaultProps = {\n//     title:'vaibhav',\n//     age:25\n// }\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","propsTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","NavBar","props","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","propsType","title","string","age","number","$RefreshReg$"],"sources":["/home/shamal.thakore@firstcry.io/Shamal_thakore/text_changes/src/components/NavBar.js"],"sourcesContent":["import React, {useState} from 'react';\nimport propsTypes from 'prop-types';\n\nexport default function NavBar(props){\n\n    // const [text, updatetext] = useState(props.title+ `-` +props.age);\n\n    // const textUpperCase = () => {\n    //     let textUppercase = text.toUpperCase();\n    //     updatetext(textUppercase)\n    // }\n\n    // const setTestvalue = (event) => {\n    //     updatetext(event.target.value)\n    // }\n\n    // const textLowerCase = () => {\n    //     let textlowercase = text.toLowerCase();\n    //     updatetext(textlowercase)\n    // }\n    return(\n        <>\n           <div className=\"container text-center\">\n                {/* <div className=\"mb-3\">\n                    <textarea className=\"form-control\" rows=\"7\" value={text} onChange={setTestvalue}></textarea>\n                </div>\n\n                <button type=\"button\" className=\"btn btn-outline-primary\" onClick={textUpperCase}>Upper Text</button>&nbsp;\n                <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={textLowerCase}>Lower Text</button>&nbsp;\n                <button type=\"button\" className=\"btn btn-outline-success\">Success</button>&nbsp;\n                <button type=\"button\" className=\"btn btn-outline-danger\">Danger</button>&nbsp;\n                <button type=\"button\" className=\"btn btn-outline-warning\">Warning</button>&nbsp;\n                <button type=\"button\" className=\"btn btn-outline-info\">Info</button>&nbsp;\n                <button type=\"button\" className=\"btn btn-outline-light\">Light</button>&nbsp;\n                <button type=\"button\" className=\"btn btn-outline-dark\">Dark</button>&nbsp; */}\n           </div>\n        </>\n\n    );\n}\n\nNavBar.propsType = {\n    title:propsTypes.string,\n    age:propsTypes.number\n}\n\n// NavBar.defaultProps = {\n//     title:'vaibhav',\n//     age:25\n// }"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,MAAMA,CAACC,KAAK,EAAC;EAEjC;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA,oBACIJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACGL,OAAA;MAAKM,SAAS,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAajC;EAAC,gBACP,CAAC;AAGX;AAACC,EAAA,GApCuBR,MAAM;AAsC9BA,MAAM,CAACS,SAAS,GAAG;EACfC,KAAK,EAACf,UAAU,CAACgB,MAAM;EACvBC,GAAG,EAACjB,UAAU,CAACkB;AACnB,CAAC;;AAED;AACA;AACA;AACA;AAAA,IAAAL,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}